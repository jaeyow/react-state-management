{"ast":null,"code":"import _initializerDefineProperty from \"/Users/josereyes/Dev/react-state-management/mobx/counter/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/josereyes/Dev/react-state-management/mobx/counter/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/josereyes/Dev/react-state-management/mobx/counter/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _temp;\n\nimport { observable, action } from 'mobx';\nlet CounterStore = (_class = (_temp = class CounterStore {\n  constructor() {\n    _initializerDefineProperty(this, \"counter\", _descriptor, this);\n\n    this.increment = () => {\n      this.counter = this.counter + 1;\n    };\n\n    this.decrement = () => {\n      this.counter = this.counter - 1;\n    };\n\n    this.incrementIfOdd = () => {\n      if (this.counter % 2 !== 0) {\n        this.increment();\n      }\n    };\n\n    this.incrementAsync = () => {\n      setTimeout(this.increment, 1000);\n    };\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"counter\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return 0;\n  }\n})), _class);\nexport { CounterStore as default };","map":{"version":3,"sources":["/Users/josereyes/Dev/react-state-management/mobx/counter/src/counterStore.js"],"names":["observable","action","CounterStore","increment","counter","decrement","incrementIfOdd","incrementAsync","setTimeout"],"mappings":";;;;;;AAAA,SAAQA,UAAR,EAAoBC,MAApB,QAAiC,MAAjC;IAEqBC,Y,sBAAN,MAAMA,YAAN,CAAmB;AAAA;AAAA;;AAAA,SAGjCC,SAHiC,GAGrB,MAAM;AACjB,WAAKC,OAAL,GAAe,KAAKA,OAAL,GAAe,CAA9B;AACA,KALgC;;AAAA,SAOjCC,SAPiC,GAOrB,MAAM;AACjB,WAAKD,OAAL,GAAe,KAAKA,OAAL,GAAe,CAA9B;AACA,KATgC;;AAAA,SAWjCE,cAXiC,GAWhB,MAAM;AACtB,UAAI,KAAKF,OAAL,GAAe,CAAf,KAAqB,CAAzB,EAA4B;AAC3B,aAAKD,SAAL;AACA;AACC,KAf8B;;AAAA,SAiB/BI,cAjB+B,GAiBd,MAAM;AACxBC,MAAAA,UAAU,CAAC,KAAKL,SAAN,EAAiB,IAAjB,CAAV;AACE,KAnB8B;AAAA;;AAAA,C,iFAChCH,U;;;;;WAAqB,C;;;SADFE,Y","sourcesContent":["import {observable, action} from 'mobx';\n\nexport default class CounterStore {\n\t@observable counter = 0;\n\n\tincrement = () => {\n\t\tthis.counter = this.counter + 1;\n\t};\n\n\tdecrement = () => {\n\t\tthis.counter = this.counter - 1;\n\t}\n\n\tincrementIfOdd = () => {\n\t\tif (this.counter % 2 !== 0) {\n\t\t\tthis.increment();\n\t\t}\n\t  }\n\n\t  incrementAsync = () => {\n\t\tsetTimeout(this.increment, 1000)\n\t  }\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/josereyes/Dev/react-state-management/context-api/counter/src/App.js\";\nimport React from 'react';\nconst AppContext = React.createContext();\n\nfunction AppProvider() {\n  var counter = 0;\n\n  var increment = () => {\n    this.counter = this.counter + 1;\n  };\n\n  var decrement = () => {\n    this.counter = this.counter - 1;\n  };\n\n  var incrementIfOdd = () => {\n    if (this.counter % 2 !== 0) {\n      this.increment();\n    }\n  };\n\n  var incrementAsync = () => {\n    setTimeout(this.increment, 1000);\n  };\n\n  const value = {\n    counter,\n    increment,\n    decrement,\n    incrementIfOdd,\n    incrementAsync\n  };\n  return React.createElement(AppContext.Provider, {\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, props.children);\n}\n\nexport default class App extends React.Component {\n  render() {\n    const {\n      counterStore\n    } = this.props;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Clicked: 0 times\", ' ', React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"+\"), ' ', React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"-\"), ' ', React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Increment if odd\"), ' ', React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Increment async\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/josereyes/Dev/react-state-management/context-api/counter/src/App.js"],"names":["React","AppContext","createContext","AppProvider","counter","increment","decrement","incrementIfOdd","incrementAsync","setTimeout","value","props","children","App","Component","render","counterStore"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,UAAU,GAAGD,KAAK,CAACE,aAAN,EAAnB;;AAEA,SAASC,WAAT,GAAuB;AACrB,MAAIC,OAAO,GAAG,CAAd;;AAEA,MAAIC,SAAS,GAAG,MAAM;AACtB,SAAKD,OAAL,GAAe,KAAKA,OAAL,GAAe,CAA9B;AACA,GAFA;;AAID,MAAIE,SAAS,GAAG,MAAM;AACrB,SAAKF,OAAL,GAAe,KAAKA,OAAL,GAAe,CAA9B;AACA,GAFD;;AAIA,MAAIG,cAAc,GAAG,MAAM;AAC1B,QAAI,KAAKH,OAAL,GAAe,CAAf,KAAqB,CAAzB,EAA4B;AAC3B,WAAKC,SAAL;AACA;AACC,GAJH;;AAME,MAAIG,cAAc,GAAG,MAAM;AAC1BC,IAAAA,UAAU,CAAC,KAAKJ,SAAN,EAAiB,IAAjB,CAAV;AACC,GAFF;;AAIC,QAAMK,KAAK,GAAG;AAAEN,IAAAA,OAAF;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA,SAAtB;AAAiCC,IAAAA,cAAjC;AAAiDC,IAAAA;AAAjD,GAAd;AACA,SACE,oBAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAEE,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,CAACC,QADT,CADF;AAKH;;AAED,eAAe,MAAMC,GAAN,SAAkBb,KAAK,CAACc,SAAxB,CAAkC;AAC/CC,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEC,MAAAA;AAAF,QAAmB,KAAKL,KAA9B;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEG,GAFH,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHF,EAMG,GANH,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPF,EAUG,GAVH,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAXF,EAcG,GAdH,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAfF,CADF,CADF;AAuBD;;AA1B8C","sourcesContent":["import React from 'react';\nconst AppContext = React.createContext();\n\nfunction AppProvider() {\n  var counter = 0;\n\n  var increment = () => {\n\t\tthis.counter = this.counter + 1;\n\t};\n\n\tvar decrement = () => {\n\t\tthis.counter = this.counter - 1;\n\t}\n\n\tvar incrementIfOdd = () => {\n\t\tif (this.counter % 2 !== 0) {\n\t\t\tthis.increment();\n\t\t}\n\t  }\n\n\t  var incrementAsync = () => {\n\t\t  setTimeout(this.increment, 1000)\n    }  \n    \n    const value = { counter, increment, decrement, incrementIfOdd, incrementAsync }\n    return (\n      <AppContext.Provider value={value}>\n        {props.children}\n      </AppContext.Provider>\n    )\n}\n\nexport default class App extends React.Component {\n  render () {\n    const { counterStore } = this.props;\n    return (\n      <div>\n        <p>\n          Clicked: 0 times\n          {' '}\n          <button>\n            +\n          </button>\n          {' '}\n          <button>\n            -\n          </button>\n          {' '}\n          <button>\n            Increment if odd\n          </button>\n          {' '}\n          <button>\n            Increment async\n          </button>\n        </p>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}